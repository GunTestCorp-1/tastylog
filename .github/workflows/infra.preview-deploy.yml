name: "infra preview & deploy"

on: 
  push: 
    branches: 
      - main
    paths: 
      - 10_infra/**
      - .github/workflows/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: 1.1.7
  AWS_REGION: ap-northeast-1
  TF_PROJECT: tastylog
  TF_ENVIRONMENT: dev

defaults:
  run:
    shell: bash
    working-directory: "10_infra/"

jobs:
  preview:  
    name: "Preview"
    runs-on: ubuntu-latest
    outputs:
      TF_PLAN_EXITCODE: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform format
        run:  
          terraform fmt -check

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run:  
          terraform init -no-color

      - name: Terraform validate
        run: 
          terraform validate -no-color

      - name: Terraform plan
        id:   plan
        run: 
          terraform plan
            -detailed-exitcode
            -input=false
            -var 'project=${{ env.TF_PROJECT }}'
            -var 'environment=${{ env.TF_ENVIRONMENT }}'
            -var 'username=${{ secrets.MYSQL_USENAME }}'
            -var 'password=${{ secrets.MYSQL_PASSWORD }}'
            
      - name: check plan exitcode
        run:  echo ${{ steps.plan.outputs.exitcode }}

      - name: Check plan failure
        continue-on-error: true
        id:   plancheck
        if:   ${{ !contains(steps.plan.outputs.stdout, 'No changes.') }}
        run:  exit 2

      - name: Slack Notify
        if: steps.plan.outputs.exitcode == 2
        uses: slackapi/slack-github-action@v1.22.0
        with: 
          channel-id: "C056P7K5YUW"
          payload: |
              {
                "attachments": [
                  {
                    "blocks": [
                      {
                        "type": "header",
                        "text": {
                          "type": "plain_text",
                          "text": "Request for approve",
                          "emoji": true
                        }
                      },
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        }
                      }
                    ]
                  }
                ]
              }
        env: 
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  deploy: 
    name: Deploy
    needs: preview
    if: needs.preview.outputs.TF_PLAN_EXITCODE == 2
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Cehckout repository
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform format
        run: |
          terraform fmt -check

      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: |
          terraform init -no-color

      - name: Terraform apply
        id: apply
        run: |
          terraform apply \
            -var 'project=${{ env.TF_PROJECT }}' \
            -var 'environment=${{ env.TF_ENVIRONMENT }}' \
            -var 'username=${{ secrets.MYSQL_USENAME }}' \
            -var 'password=${{ secrets.MYSQL_PASSWORD }}' \
            -input=false \
            -no-color \
            -auto-approve
                